/* Exercício 1 - Crie um programa em C++, que recebe uma palavra como parâmetro e imprime. */

#include <iostream>
using namespace std;

int main () { // inicia o codigo

         // criando uma variavel de texto
         string nome;

         // Imprimindo uma mensagem para receber a variavel
         cout <<"Qual é o seu nome?"<< "\n";

         // Recebendo o nome que foi digitado
         cin >> nome;
        
        // Devolvendo a palavra digitada
        cout <<"Ola, "<< nome <<". Como vai?";

         // Pausando
         system ("pause");

              }
   
/* Exercício 2 - Crie um programa em C++ que atribui o valor 20 para uma variavel inteira, o valor
 30 para outra variavel inteira e some esses dois valores e armazene em outra variavel. */

#include <iostream>

using namespace std;

int main () { // inicia o codigo

         // Criando duas variaveis inteiras
         int a = 20;
         int b = 30;

        // Criando a variavel inteira que vai somar
        int soma = a + b;

         // Imprimindo o resultado
        cout <<"O resultado de a+b é "<< soma <<".";

              }
              

/* Exercício 3 - Crie um programa em C++ com uma variavel do tipo String, contendo um nome qualquer.
Crie uma segunda variavel do tipo Float, contendo o valor do salario dessa pessoa. Imprima:
A pessoa <Nome da Pessoa>, recebe R$<Salario da pessoa>. */

#include <iostream>

using namespace std;

int main () { // inicia o codigo

         // Criando uma variavel de texto
        string funcionario = "Mariana";
        
         // Criando uma variavel tipo float para o salario
        float salario = 1500;
        
         // Imprimindo o resultado
        cout << funcionario << " recebe R$" << salario;

              }
              
/* Exercício 4 - Crie um programa em C++ que compara o valor do salario de duas pessoas, e informa
qual salario é maior. /*

#include <iostream>

using namespace std;

int main () { // inicia o codigo

         // Criando duas variaveis do tipo inteira para o salario
        int salario1 = 5100;
        int salario2 = 5100;
        
         // Se o primeiro salario for maior...
        if (salario1 > salario2) 
        cout << "Maior salario: 1";
        
        // Se o segundo salario for maior...
        if (salario1 < salario2)
        cout <<"Maior salario: 2";
        
        // Se forem iguais
        if (salario1 = salario2)
        cout <<"Iguais.";
        
              }

/* Exercício 5 - Crie um programa em C++ que recebe a pontuação de um usuário e a de outro usuário
e verifica quem ganhou o jogo, com base na maior pontuação. */

#include <iostream> 
using namespace std; 

int somapontos (int pontos[], int numjogos) 
    { 
        
        // Criando duas variaveis inteiras
        int resultado = 0; 
        int controle = 0; 

        // Enquanto a variavel controle for maior do que numjogos
        while (controle < numjogos) {  

        resultado = resultado + pontos[controle]; 
        controle = controle + 1; 

        // Pausando os resultados
        return resultado; 
    } 
    }
    
int main() // Iniciando a funcao

{ 
   // Atribuindo valores/pontos aos participantes
   int part1 [5] = {3,3,1,1,3}; 
   int part2 [5] = {1,1,3,3,1}; 

   // Se os pontos do part1 forem maiores que os do part2
   if (part1 > part2)
   cout << "Parabéns, Participante 1!"; 

   // Senão...
   else if (part1 < part2)
   cout << "Parabéns, participante 2!";
   
   else
   cout << "Empatou!";
} 
              
/* Exercício 6 - Crie um vetor de elementos do tipo inteiro e imprima o primeiro
e o último elemento desse vetor. */


#include <iostream> 
using namespace std; 

int main () {

         // Criando o vetor
         int vetor[5] = {1,5,9,8,2};
         
         // Imprimindo na tela o primeiro elemento
         cout << vetor[0];
         
         return (0);
            }
            
/* Exercício 7 - Crie um vetor de elementos do tipo float, insira valores nesses elementos e faça um
loop para imprimir cada um desses elementos. */

/*Exercício 8 - Três times de futebol participaram de 6 partidas. Crie vetores para simular os resultados
desses jogos e imprima a pontuação obtida por cada time.*/
            
/* Exercício 9 - Cria um programa em C++ que possui uma variável inteira que se inicia com o valor 0.
Faça com que ela acumule o valor 2 nela mesma ao longo de 20 iterações.
Dica: Em um loop podemos fazer uma variável receber o valor dela mesma mais o valor que se deseja
acumular. */
            
/*
Exercício 10 - Pensando na mesma lógica do programa anterior, crie uma alteração no Exercício referente
aos times, para que seja feita a soma das pontuações de cada um.

Revisão de Função

/* Exercício 11 - Crie um programa que faz a leitura da nota final de um aluno e verifica se ele 
foi aprovado, reprovado ou se está de exame especial em uma disciplina. Os critérios que devem
ser considerados são: Nota acima de 70 indica aprovação, nota abaixo de 40 indica reprovação e
nota entre 40 e 59 indica exame especial. */


#include <iostream>

using namespace std;

int main()
{
    int nota;     // cria a variavel inteira nota
    
    cout << "Qual foi a nota? ";     // solicita a nota
    
    cin >> nota;      // recebe a nota inserida
    
    if (nota<39)
    cout <<"aluno reprovado";      // imprime "aluno aprovado caso a nota seja maior do que 39 (de 40 pra cima)
    
    if (nota>69)
    cout <<"aluno aprovado";      // imprime "aluno reaprovado caso a nota seja menor do que 69 (de 70 pra cima)
    
    else 
    cout << "aluno em exame";      // imprime "aluno em exame" nos outros casos
}


/* Exercício 12 - Faça uma alteração no seu programa anterior, para que ele utilize as notas individuais
do aluno em cada atividade da disciplina, e calcule o resultado final, para que posteriormente possa
ser verificada a aprovação do aluno.

Dixas: Crie um vetor, contendo um conjunto de notas. Faça um loop que percorre esse conjunto de
notas e faz o seu somatório.
Depois utilize a função criada no exercício 1, para verificar a situação do aluno.*/

/* Ecercício 13 - Um desenvolvedor recebe 50 reais por hora trabalhada. Considerando que ele trabalhada
8 horas por dia, crie uma função que calcula quanto esse desenvolvedor recebeu no mês atual, considerando
que ele trabalhou 22 dias nesse mês.*/

#include <iostream>

using namespace std;

int main()
{

/* Define variaveis com o valor por hora
e o mesmo multiplicado pelas horas trabalhadas
por dia. */

int porhora = 50;
int dia = porhora * 8;
int mes;

// Solicita a quantidade de dias a ser calculado
cout << "Quantos dias foram trabalhados?";

// Atribui o valor digitado ao mês
cin >> mes;

// Multiplica o valor diario pela quantidade de dias e imprime
cout <<"O desenvolvedor receberá R$" << mes * dia << " este mês.";
}

   

/* Exercício 14 - Uma empresa de aviação possui um tipo de avião que comporta 10 pessoas. Crie um programa
que possui uma função, cujos parâmetros de entrada são: o número de aviões disponíveis e o número de
passageiros para serem transportados. Essa função deverá calcular se os aviões conseguem comportar essas
pessoas, e caso não consiga, quantas ficarão para as próximas viagens. Faça uma simulação na qual os
aviões comportam o número de pessoas e outra na qual ele não comporta.*/

/* Exercício 15 - Um hospital consegue atender 20 pessoas por hora. Considerando que no momento em que
o hospital foi aberto chegaram 100 pessoas, faça um programa para calcular quanto tempo o paciente com
a senha 68 irá demorar para ser atendido.

Dicas: Faça um loop while, que inicia com 20 pessoas sendo atendidas sem espera, e caminha de 20 em 20.
A cada iteração ele deverá aumentar em 20 o número de pessoas sendo atendidas e em 1 o número de horas.
Caso o número de pessoas atendidas seja maior do que o número da senha que se deseja verificar, isso
indica que aquele paciente entrou em atendimento na iteração atual, e esperou o número de horas 
acumuladas até o momento.*/

/* Exercício 16 - Faça um programa em C++ que percorre um conjunto de números e informa qual deles é o
maior.*/

/* Exercício 17 - Faça um programa em C++ que executa a mesma operação do primeiro, porém informa a
posição do maior número, e não o seu valor.*/

/* Exercício 18 - Faça um ajuste no programa 16, para que ele também informe o menor valor da lista.*/

/* Exercício 19 - A equipe de uma contrutora consegue entregar 100 metros quadrados construídos por dia.
Com base nisso, faça um programa que possui uma função para efetuar o cálculo do tempo necessário
para construir um projeto com 2326 metros quadrados. Esse tempo deve ser fornecido em dias.*/

#include <iostream>

using namespace std;

int main()
{
    // Definindo uma variavel para os metros e uma para os dias
    // O uso do float se deve ao resultado não ser um numero inteiro
    float m = 2326;
    float dia = 100;
    
    // Divide a quantidade de metros pelo que é produzido diariamente
    float tempo = m / dia;
    
    // Imprime o resultado
    cout <<tempo<< " dias";
}

/* Exercício 20 - Gere um conjunto de 10 números inteiros de forma aleatória, e verifique qual é o maior
valor gerado. */

Exemplo de geração de números aleatórios:

valor1 = rand() % 100; // gera valores de 0 até 99
valor2 = rand() % 100 + 1; // gera valores de 1 até 100, pois foi somado 1 ao primeiro exemplo. */
